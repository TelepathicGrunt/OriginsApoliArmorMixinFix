plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url = 'https://api.modrinth.com/maven/'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup'net.adriantodt.fabricmc'
		}
	}
	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url = "https://masa.dy.fi/maven"
	}
	maven {
		url = "https://maven.shedaniel.me/"
	}
	maven {
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		url = "https://jitpack.io"
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"origins_apoli_armor_mixin_fix" {
			sourceSet sourceSets.main
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modRuntimeOnly("maven.modrinth:modmenu:7.2.2")

	modCompileOnly(modRuntimeOnly("com.github.apace100:origins-fabric:${project.origins_version}"))
	modCompileOnly("com.github.apace100:apoli:${project.apoli_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}